<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>